<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>